<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RK5CYII=
</value>
  </data>
</root>